<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>